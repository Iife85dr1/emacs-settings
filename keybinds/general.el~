(use-package general
 :ensure t
 :config
(general-define-key
 :states 'motion
 ;; swap ; and :
 ";" 'evil-ex
 ":" 'evil-repeat-find-char)
;; same as
(general-define-key
 :states 'motion
 ";" 'evil-ex
 ":" 'evil-repeat-find-char)
;; `general-def' can be used instead for `evil-global-set-key'-like syntax
(general-def 'motion
  ";" 'evil-ex
  ":" 'evil-repeat-find-char)

;; alternative using `general-translate-key'
;; swap ; and : in `evil-motion-state-map'
(general-swap-key nil 'motion
  ";" ":")

;; * Mode Keybindings
(general-define-key
 :states 'normal
 :keymaps 'emacs-lisp-mode-map
 ;; or xref equivalent
 "K" 'elisp-slime-nav-describe-elisp-thing-at-point)
;; `general-def' can be used instead for `evil-define-key'-like syntax
 (general-def 'normal emacs-lisp-mode-map
  "K" 'elisp-slime-nav-describe-elisp-thing-at-point)
 (general-create-definer my-leader-def
  :prefix "SPC")
 (general-create-definer my-local-leader-def
  :prefix "SPC m")
 (general-create-definer my-local-leader-build-def
  :desc "lol"
  :prefix "SPC m b")

;; ** Global Keybindings
(my-leader-def
  :keymaps 'normal
  ;; bind "SPC a"
  "a" 'org-agenda
  "c" 'org-capture
  "," 'ivy-switch-buffer
  )
;; `general-create-definer' creates wrappers around `general-def', so
;; `evil-global-set-key'-like syntax is also supported
(my-leader-def 'normal
  "a" 'org-agenda
  "c" 'org-capture
  "," 'ivy-switch-buffer
  )

;; Compile
(my-leader-def
 :keymaps 'normal
 "c" 'compile)
(my-leader-def 'normal
 "c" 'compile)

;;magit

(general-setq evil-search-module 'evil-search)
 )



